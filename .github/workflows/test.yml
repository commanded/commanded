name: Test

on:
  pull_request:
  push:
    branches:
      - master
      - 'v*'

env:
  MIX_ENV: test

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: 1.17.x
            otp: 27
          - elixir: 1.16.x
            otp: 26
          - elixir: 1.15.x
            otp: 26
          - elixir: 1.14.x
            otp: 26
          - elixir: 1.13.x
            otp: 25

    steps:
    - uses: actions/checkout@v4

    - name: Set up Elixir
      id: beam
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{ matrix.otp }}

    - name: Restore dependencies cache
      uses: actions/cache@v4
      with:
        path: deps
        key: ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix do deps.get, deps.compile

    - name: Check formatting
      run: mix format --check-formatted

    - name: Check compilation
      run: mix compile --warnings-as-errors

    - name: Analyse code
      run: mix credo --strict

    - name: Run tests
      run: |
        epmd -daemon
        mix test --include distributed

    - name: Retrieve Dialyzer PLT cache
      uses: actions/cache@v4
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ steps.beam.outputs.otp-version }}-${{ steps.beam.outputs.elixir-version }}-plts-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-plts-

    - name: Create Dialyzer PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt

    - name: Run Dialyzer
      run: mix dialyzer --no-check
